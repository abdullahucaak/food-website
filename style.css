@import url('https://fonts.googleapis.com/css2?family=Yusei+Magic&display=swap');
*{
    font-family: 'Yusei Magic', sans-serif;
    padding: 0;
    margin: 0;
    font-size: 16px;
    font-weight: 300;
    box-sizing: border-box;
}
body{
    margin: 0;
}
.container{
    display: grid;
    grid-template-areas: 
        "header" /* bu isimler html deki classlarla aynı olmak zorunda değil. */
        "content"
        "footer";
    height: 1800px;
    grid-template-rows: 80px auto 300px; /* sırasıyla header content ve footer alanlarına satır yüksekliği değerleri verdik (auto yerine 1fr de diyebilirdik.) */
}
.header{
    grid-area: header; /* grid-template-areas ile eşlenmesi gereken yer burası */
    background: url(images/logo.png) no-repeat 10vw 0.70rem whitesmoke;/*tekraryok, yatayda soldan 10vw(10/100), dikeyde 0.70rem */
    background-size: 6%; /* header alanının %6'sı */
    display: flex; /*  bunu header kapsayıcısının içerisindeki kodları/iconları/buttonları kontrol edebilmek için yazdık. ŞART. sayfa layout'unda genelde grid ama içerik hizalamalarında flex kullanırız diyor. */
    flex-direction: row; /* varsayılan sanırım */
    justify-content: flex-end; /* iconlar ve buttonlar içeriğini sona/sağa yasladık. */
    align-items: center;
    /* burada bu kodların logoya' değilde neden sadece iconlara komut verdiğini anlamadım. araştır. sadece HTML içeriklerine komut veriyor olabilir. */

    position: sticky;
    top: 0;
    z-index: 99;
}
/* logo gibi değişmeyen resimler için background, içerik gibi değişen resimler için img kullanırız diyor. */
.header > a{
    color: crimson;
    margin: 0.3rem;
    transition: 500ms;
}
.header > a:hover{
    color: crimson;
    margin: 0.3rem;
    transform: scale(1.1);
}
.header > ul{
    list-style-type: none;
    display: flex;
    flex-direction: row;
    margin-left: 1 vw;
    margin-right: 10vw;
}
.header > ul li{
    margin: 0.5rem;
}
.header > ul li a{
    text-decoration: none;
    padding: 0.75rem 2rem;
    color: darkgray;
    border-left: 1px solid gray;
    border-radius: 0.25rem;
    transition: 0.5s background-color, 1s color;
}
.header > ul li a:hover{
    background-color: crimson;
    color: whitesmoke;
    border-left: 1px solid tomato;
}

.content{
    grid-area: content;
    display: grid;/* bu alan kendi içinde intro ve content bölümüne bölündüğü için bu bölünmeyi sağlamak adına tekrar display: grid; verdik. hee bu çok önemli bak. her bölünme için he... */
    grid-template-rows: 2.5fr 8fr; /* intro yukarıda oldugu için(ilk) 2.5fr, ikinci bölüm 8fr. sanırım html'de kardeş olmalarına göre algıladı. */
}
.intro{
    display: flex;
    flex-direction: row;
    position: relative;/* .intro:before'a koydugumuz resmin görünmesi için "relative" ile referans alanı verdik. */
}
.intro-container{
    flex: 0 0 30%;
    margin-top:3rem;
    margin-left: 10vw;
    z-index: 98; /* intro-container'ı üste aldık resmin opacity'si bunu etkilemesin diye. */
    display: flex; /* bu flexi "Detaylar..." kısmını kapsayıcının içinde kontrol edip sağ alta alabilmek için yazdık. unutma iç konumlandırma için kapsayıcı kullanıyoruz. */
    flex-direction: column;
}
.intro:before{
    content: '';
    background: url(images/intro.jpg) no-repeat center center/cover;
    position: absolute;/* resim için */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.9;
}
.intro-container h5 a{
    text-decoration: none;
    color: whitesmoke;
    display: block;
    border: 1px solid whitesmoke;
    border-radius: 0.25rem;
    padding: 1rem 3rem;
    text-align: center;
    line-height: 1rem;
    box-shadow: 0px 0px 5px 0 whitesmoke;
    transition: 1s;
}
.intro-container h5 a:hover{
    text-decoration: none;
    background-color: whitesmoke;
    color: rgb(122, 122, 122);
    display: block;
    border: 1px solid gray;
    border-radius: 0.25rem;
    padding: 1rem 3rem;
    text-align: center;
    line-height: 1rem;
    box-shadow: 0px 0px 5px 0 black;
    transform: scale(1.1);
}
.intro-container h3{
    font-size: 2rem;
    filter: drop-shadow(0px 0px 1px whitesmoke);
}
.intro-container p{
    text-align: justify;
}
.intro-container a.intro-button{
    color: whitesmoke;
    transition: 500ms;
    align-self: flex-end; /* bu kodla (yukarıda kapsayıcıda display flex kullandık.) "Detaylar..." kısmını sağ alta aldık.
    flex-direction: column; olduğu için align-self, "row" olsaydı justify-self kullanacaktık. */
    margin-right: 2rem ; /* kapsayıcının sağından 2rem. */
}
.intro-container a.intro-button:hover{
    color: rgb(106, 128, 196);
    font-size: 1.05rem;
}
.article{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 0.5fr 3fr 4fr 3fr;/*article'ın içinde 3. satırın daha kalın olmasını sağladık. */
    grid-gap: 1rem; /* sadece article alanının içindeki content boxlara boşluk vermek için kapsayıcıyı kullandık. */
    margin-left: 10vw;
    margin-right: 10vw;
}
.article .content-baslik{
    background: none;
    color: rgb(117, 117, 117);
    font-size: 1.5rem;
    padding: 0.9rem 0 0 0;
    text-transform: uppercase;
    font-family: Geneva, Tahoma, sans-serif;
}
.content-box:nth-child(1){
    grid-column: 1 / span 3;
}
.content-box:nth-child(2){
    grid-column: 1 / span 2; /* 1. sütun çizgisinden başla span2 diyerek yanyana olan iki hücre kadar birleştir.(iki sütunluk alan.) */
    display: flex;
    align-items: center;
}
.content-box:nth-child(3):before{
    opacity: 0.3;
}
.content-box:nth-child(3){
    position: relative;
    overflow: hidden;
}
.content-box:nth-child(3) .box-inner-container{
    position: absolute;
    z-index: 97;
    top: 3rem;
    left: 1rem;
}
.content-box:nth-child(3) .box-inner-container h3,.content-box:nth-child(3) .box-inner-container p{
    color: white;
    text-shadow: 0px 0 5px black;
}
.content-box:nth-child(3) img{
    opacity: 0.8;
}
.content-box:nth-child(8){
    grid-column: 2 / span 2;
}
.content-box .sticker a{
    display: inline-block;
    text-decoration: none;
    font-size: 1rem;
    background-color: blueviolet;
    color: rgb(216, 209, 211);
    border: 1px solid blueviolet;
    border-radius: 2rem;
    padding: 0.5rem 0.5rem;
    transition: 500ms;
}
.content-box .sticker a:hover{
    display: inline-block;
    text-decoration: none;
    font-size: 1rem;
    background-color: blueviolet;
    color: rgb(219, 161, 180);
    border: 1px solid blueviolet;
    border-radius: 2rem;
    padding: 0.5rem 0.5rem;
    transform: scale(1.1);
}
.content-box h3{
    font-size: 1.6rem;
    color: crimson;
    text-decoration: underline;
}
.content-box p{
    font-size: 1.1rem;
    color: rgb(209, 124, 141);
}

.article .content-box img{
    height: 295px; /*ana layout'u fraction ile oranladığımız için resmi contentin height değerinden yüksek verirsen contentin height değeri de atar, contentin height değeri artınca oran değişir ve bütün layout bozulur. AŞIRI ÖNEMLİ */
    margin-right: 1rem;

}
.footer{
    grid-area: footer;
    display: grid;
    grid-template-columns: repeat(4,1fr);
    grid-template-rows: 3fr 1fr; /* copy-right kısmı ile alt içerik kısmını ayarladık. 4 tane html footerbox'ımız var. 4 sütun dediğimiz için birinci satırı onlar doldurdu. sonra copy right a tek başına 4 sütunluk yer al falan dedik. bunlar önemli html le beraber çalışıyoruz dikkat et. */
}
.copy-right-box{
    grid-column: 1/span 4; /* 1. sütundan başla 4 tanesinin birleşmesiyle tek bir sütun ol. */
}
div{
    color: whitesmoke;
}
